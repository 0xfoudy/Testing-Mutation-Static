{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DECIMALS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newMinter",
          "type": "address"
        }
      ],
      "name": "allowToMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToMint",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mintReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "exMinter",
          "type": "address"
        }
      ],
      "name": "preventFromMinting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040518060400160405280601081526020016f29ba30b5b2a932bbb0b9322a37b5b2b760811b815250604051806040016040528060048152602001631495d49160e21b815250816003908162000069919062000196565b50600462000078828262000196565b505050620000956200008f6200009b60201b60201c565b6200009f565b62000262565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011c57607f821691505b6020821081036200013d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200019157600081815260208120601f850160051c810160208610156200016c5750805b601f850160051c820191505b818110156200018d5782815560010162000178565b5050505b505050565b81516001600160401b03811115620001b257620001b2620000f1565b620001ca81620001c3845462000107565b8462000143565b602080601f831160018114620002025760008415620001e95750858301515b600019600386901b1c1916600185901b1785556200018d565b600085815260208120601f198616915b82811015620002335788860151825594840194600190910190840162000212565b5085821015620002525787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610c0b80620002726000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a9059cbb11610071578063a9059cbb14610227578063b018416f1461023a578063b691f8de1461024d578063dd62ed3e14610260578063f2fde38b1461027357600080fd5b8063715018a6146101e95780638da5cb5b146101f157806395d89b411461020c578063a457c2d71461021457600080fd5b806323b872dd116100e957806323b872dd146101835780632e0f262514610196578063313ce5671461019e57806339509351146101ad57806370a08231146101c057600080fd5b806306fdde031461011b578063095ea7b314610139578063109d74e21461015c57806318160ddd14610171575b600080fd5b610123610286565b6040516101309190610a32565b60405180910390f35b61014c610147366004610a9c565b610318565b6040519015158152602001610130565b61016f61016a366004610ac6565b610332565b005b6002545b604051908152602001610130565b61014c610191366004610af2565b61039a565b610175601281565b60405160128152602001610130565b61014c6101bb366004610a9c565b6103be565b6101756101ce366004610b2e565b6001600160a01b031660009081526020819052604090205490565b61016f6103e0565b6005546040516001600160a01b039091168152602001610130565b6101236103f4565b61014c610222366004610a9c565b610403565b61014c610235366004610a9c565b61047e565b61016f610248366004610b2e565b61048c565b61016f61025b366004610b2e565b6104b5565b61017561026e366004610b50565b6104e1565b61016f610281366004610b2e565b61050c565b60606003805461029590610b7a565b80601f01602080910402602001604051908101604052809291908181526020018280546102c190610b7a565b801561030e5780601f106102e35761010080835404028352916020019161030e565b820191906000526020600020905b8154815290600101906020018083116102f157829003601f168201915b5050505050905090565b600033610326818585610585565b60019150505b92915050565b3360009081526006602052604090205460ff1661038c5760405162461bcd60e51b81526020600482015260136024820152721b9bdd08185b1b1bddd959081d1bc81b5a5b9d606a1b60448201526064015b60405180910390fd5b61039681836106a9565b5050565b6000336103a8858285610768565b6103b38585856107e2565b506001949350505050565b6000336103268185856103d183836104e1565b6103db9190610bb4565b610585565b6103e8610986565b6103f260006109e0565b565b60606004805461029590610b7a565b6000338161041182866104e1565b9050838110156104715760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610383565b6103b38286868403610585565b6000336103268185856107e2565b610494610986565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6104bd610986565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610514610986565b6001600160a01b0381166105795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610383565b610582816109e0565b50565b6001600160a01b0383166105e75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610383565b6001600160a01b0382166106485760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610383565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166106ff5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610383565b80600260008282546107119190610bb4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600061077484846104e1565b905060001981146107dc57818110156107cf5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610383565b6107dc8484848403610585565b50505050565b6001600160a01b0383166108465760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610383565b6001600160a01b0382166108a85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610383565b6001600160a01b038316600090815260208190526040902054818110156109205760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610383565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107dc565b6005546001600160a01b031633146103f25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610383565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610a5f57858101830151858201604001528201610a43565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a9757600080fd5b919050565b60008060408385031215610aaf57600080fd5b610ab883610a80565b946020939093013593505050565b60008060408385031215610ad957600080fd5b82359150610ae960208401610a80565b90509250929050565b600080600060608486031215610b0757600080fd5b610b1084610a80565b9250610b1e60208501610a80565b9150604084013590509250925092565b600060208284031215610b4057600080fd5b610b4982610a80565b9392505050565b60008060408385031215610b6357600080fd5b610b6c83610a80565b9150610ae960208401610a80565b600181811c90821680610b8e57607f821691505b602082108103610bae57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561032c57634e487b7160e01b600052601160045260246000fdfea2646970667358221220497ae41ec43ceb6034cc1a9e942a978adb602f95ade98fd9995c4ac0aacae59464736f6c63430008130033",
    "sourceMap": "192:600:34:-:0;;;338:50;;;;;;;;;;2029:116:19;;;;;;;;;;;;;-1:-1:-1;;;2029:116:19;;;;;;;;;;;;;;;;-1:-1:-1;;;2029:116:19;;;2104:5;2096;:13;;;;;;:::i;:::-;-1:-1:-1;2120:7:19;:17;2130:7;2120;:17;:::i;:::-;;2029:116;;964:32:18;983:12;:10;;;:12;;:::i;:::-;964:18;:32::i;:::-;192:600:34;;656:98:27;736:10;;656:98::o;2510:191:18:-;2603:6;;;-1:-1:-1;;;;;2620:17:18;;;-1:-1:-1;;;;;;2620:17:18;;;;;;;2653:40;;2603:6;;;2620:17;2603:6;;2653:40;;2584:16;;2653:40;2573:128;2510:191;:::o;14:127:39:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:39;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:39;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:39;;;2580:26;2531:89;-1:-1:-1;;1335:1:39;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:39;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:39;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:39;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:39:o;:::-;192:600:34;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a9059cbb11610071578063a9059cbb14610227578063b018416f1461023a578063b691f8de1461024d578063dd62ed3e14610260578063f2fde38b1461027357600080fd5b8063715018a6146101e95780638da5cb5b146101f157806395d89b411461020c578063a457c2d71461021457600080fd5b806323b872dd116100e957806323b872dd146101835780632e0f262514610196578063313ce5671461019e57806339509351146101ad57806370a08231146101c057600080fd5b806306fdde031461011b578063095ea7b314610139578063109d74e21461015c57806318160ddd14610171575b600080fd5b610123610286565b6040516101309190610a32565b60405180910390f35b61014c610147366004610a9c565b610318565b6040519015158152602001610130565b61016f61016a366004610ac6565b610332565b005b6002545b604051908152602001610130565b61014c610191366004610af2565b61039a565b610175601281565b60405160128152602001610130565b61014c6101bb366004610a9c565b6103be565b6101756101ce366004610b2e565b6001600160a01b031660009081526020819052604090205490565b61016f6103e0565b6005546040516001600160a01b039091168152602001610130565b6101236103f4565b61014c610222366004610a9c565b610403565b61014c610235366004610a9c565b61047e565b61016f610248366004610b2e565b61048c565b61016f61025b366004610b2e565b6104b5565b61017561026e366004610b50565b6104e1565b61016f610281366004610b2e565b61050c565b60606003805461029590610b7a565b80601f01602080910402602001604051908101604052809291908181526020018280546102c190610b7a565b801561030e5780601f106102e35761010080835404028352916020019161030e565b820191906000526020600020905b8154815290600101906020018083116102f157829003601f168201915b5050505050905090565b600033610326818585610585565b60019150505b92915050565b3360009081526006602052604090205460ff1661038c5760405162461bcd60e51b81526020600482015260136024820152721b9bdd08185b1b1bddd959081d1bc81b5a5b9d606a1b60448201526064015b60405180910390fd5b61039681836106a9565b5050565b6000336103a8858285610768565b6103b38585856107e2565b506001949350505050565b6000336103268185856103d183836104e1565b6103db9190610bb4565b610585565b6103e8610986565b6103f260006109e0565b565b60606004805461029590610b7a565b6000338161041182866104e1565b9050838110156104715760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610383565b6103b38286868403610585565b6000336103268185856107e2565b610494610986565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6104bd610986565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610514610986565b6001600160a01b0381166105795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610383565b610582816109e0565b50565b6001600160a01b0383166105e75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610383565b6001600160a01b0382166106485760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610383565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166106ff5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610383565b80600260008282546107119190610bb4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600061077484846104e1565b905060001981146107dc57818110156107cf5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610383565b6107dc8484848403610585565b50505050565b6001600160a01b0383166108465760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610383565b6001600160a01b0382166108a85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610383565b6001600160a01b038316600090815260208190526040902054818110156109205760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610383565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107dc565b6005546001600160a01b031633146103f25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610383565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610a5f57858101830151858201604001528201610a43565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a9757600080fd5b919050565b60008060408385031215610aaf57600080fd5b610ab883610a80565b946020939093013593505050565b60008060408385031215610ad957600080fd5b82359150610ae960208401610a80565b90509250929050565b600080600060608486031215610b0757600080fd5b610b1084610a80565b9250610b1e60208501610a80565b9150604084013590509250925092565b600060208284031215610b4057600080fd5b610b4982610a80565b9392505050565b60008060408385031215610b6357600080fd5b610b6c83610a80565b9150610ae960208401610a80565b600181811c90821680610b8e57607f821691505b602082108103610bae57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561032c57634e487b7160e01b600052601160045260246000fdfea2646970667358221220497ae41ec43ceb6034cc1a9e942a978adb602f95ade98fd9995c4ac0aacae59464736f6c63430008130033",
    "sourceMap": "192:600:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2215:100:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4566:201;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:39;;1162:22;1144:41;;1132:2;1117:18;4566:201:19;1004:187:39;622:168:34;;;;;;:::i;:::-;;:::i;:::-;;3335:108:19;3423:12;;3335:108;;;1601:25:39;;;1589:2;1574:18;3335:108:19;1455:177:39;5347:295:19;;;;;;:::i;:::-;;:::i;294:37:34:-;;329:2;294:37;;3177:93:19;;;3260:2;2112:36:39;;2100:2;2085:18;3177:93:19;1970:184:39;6051:238:19;;;;;;:::i;:::-;;:::i;3506:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3607:18:19;3580:7;3607:18;;;;;;;;;;;;3506:127;1891:103:18;;;:::i;1243:87::-;1316:6;;1243:87;;-1:-1:-1;;;;;1316:6:18;;;2496:51:39;;2484:2;2469:18;1243:87:18;2350:203:39;2434:104:19;;;:::i;6792:436::-;;;;;;:::i;:::-;;:::i;3839:193::-;;;;;;:::i;:::-;;:::i;505:111:34:-;;;;;;:::i;:::-;;:::i;394:105::-;;;;;;:::i;:::-;;:::i;4095:151:19:-;;;;;;:::i;:::-;;:::i;2149:201:18:-;;;;;;:::i;:::-;;:::i;2215:100:19:-;2269:13;2302:5;2295:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2215:100;:::o;4566:201::-;4649:4;736:10:27;4705:32:19;736:10:27;4721:7:19;4730:6;4705:8;:32::i;:::-;4755:4;4748:11;;;4566:201;;;;;:::o;622:168:34:-;715:10;701:25;;;;:13;:25;;;;;;;;693:57;;;;-1:-1:-1;;;693:57:34;;3410:2:39;693:57:34;;;3392:21:39;3449:2;3429:18;;;3422:30;-1:-1:-1;;;3468:18:39;;;3461:49;3527:18;;693:57:34;;;;;;;;;760:23;766:2;770:12;760:5;:23::i;:::-;622:168;;:::o;5347:295:19:-;5478:4;736:10:27;5536:38:19;5552:4;736:10:27;5567:6:19;5536:15;:38::i;:::-;5585:27;5595:4;5601:2;5605:6;5585:9;:27::i;:::-;-1:-1:-1;5630:4:19;;5347:295;-1:-1:-1;;;;5347:295:19:o;6051:238::-;6139:4;736:10:27;6195:64:19;736:10:27;6211:7:19;6248:10;6220:25;736:10:27;6211:7:19;6220:9;:25::i;:::-;:38;;;;:::i;:::-;6195:8;:64::i;1891:103:18:-;1129:13;:11;:13::i;:::-;1956:30:::1;1983:1;1956:18;:30::i;:::-;1891:103::o:0;2434:104:19:-;2490:13;2523:7;2516:14;;;;;:::i;6792:436::-;6885:4;736:10:27;6885:4:19;6968:25;736:10:27;6985:7:19;6968:9;:25::i;:::-;6941:52;;7032:15;7012:16;:35;;7004:85;;;;-1:-1:-1;;;7004:85:19;;3985:2:39;7004:85:19;;;3967:21:39;4024:2;4004:18;;;3997:30;4063:34;4043:18;;;4036:62;-1:-1:-1;;;4114:18:39;;;4107:35;4159:19;;7004:85:19;3783:401:39;7004:85:19;7125:60;7134:5;7141:7;7169:15;7150:16;:34;7125:8;:60::i;3839:193::-;3918:4;736:10:27;3974:28:19;736:10:27;3991:2:19;3995:6;3974:9;:28::i;505:111:34:-;1129:13:18;:11;:13::i;:::-;-1:-1:-1;;;;;578:23:34::1;604:5;578:23:::0;;;:13:::1;:23;::::0;;;;:31;;-1:-1:-1;;578:31:34::1;::::0;;505:111::o;394:105::-;1129:13:18;:11;:13::i;:::-;-1:-1:-1;;;;;461:24:34::1;;::::0;;;:13:::1;:24;::::0;;;;:31;;-1:-1:-1;;461:31:34::1;488:4;461:31;::::0;;394:105::o;4095:151:19:-;-1:-1:-1;;;;;4211:18:19;;;4184:7;4211:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4095:151::o;2149:201:18:-;1129:13;:11;:13::i;:::-;-1:-1:-1;;;;;2238:22:18;::::1;2230:73;;;::::0;-1:-1:-1;;;2230:73:18;;4391:2:39;2230:73:18::1;::::0;::::1;4373:21:39::0;4430:2;4410:18;;;4403:30;4469:34;4449:18;;;4442:62;-1:-1:-1;;;4520:18:39;;;4513:36;4566:19;;2230:73:18::1;4189:402:39::0;2230:73:18::1;2314:28;2333:8;2314:18;:28::i;:::-;2149:201:::0;:::o;10819:380:19:-;-1:-1:-1;;;;;10955:19:19;;10947:68;;;;-1:-1:-1;;;10947:68:19;;4798:2:39;10947:68:19;;;4780:21:39;4837:2;4817:18;;;4810:30;4876:34;4856:18;;;4849:62;-1:-1:-1;;;4927:18:39;;;4920:34;4971:19;;10947:68:19;4596:400:39;10947:68:19;-1:-1:-1;;;;;11034:21:19;;11026:68;;;;-1:-1:-1;;;11026:68:19;;5203:2:39;11026:68:19;;;5185:21:39;5242:2;5222:18;;;5215:30;5281:34;5261:18;;;5254:62;-1:-1:-1;;;5332:18:39;;;5325:32;5374:19;;11026:68:19;5001:398:39;11026:68:19;-1:-1:-1;;;;;11107:18:19;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11159:32;;1601:25:39;;;11159:32:19;;1574:18:39;11159:32:19;;;;;;;10819:380;;;:::o;8825:548::-;-1:-1:-1;;;;;8909:21:19;;8901:65;;;;-1:-1:-1;;;8901:65:19;;5606:2:39;8901:65:19;;;5588:21:39;5645:2;5625:18;;;5618:30;5684:33;5664:18;;;5657:61;5735:18;;8901:65:19;5404:355:39;8901:65:19;9057:6;9041:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9212:18:19;;:9;:18;;;;;;;;;;;:28;;;;;;9267:37;1601:25:39;;;9267:37:19;;1574:18:39;9267:37:19;;;;;;;622:168:34;;:::o;11490:453:19:-;11625:24;11652:25;11662:5;11669:7;11652:9;:25::i;:::-;11625:52;;-1:-1:-1;;11692:16:19;:37;11688:248;;11774:6;11754:16;:26;;11746:68;;;;-1:-1:-1;;;11746:68:19;;5966:2:39;11746:68:19;;;5948:21:39;6005:2;5985:18;;;5978:30;6044:31;6024:18;;;6017:59;6093:18;;11746:68:19;5764:353:39;11746:68:19;11858:51;11867:5;11874:7;11902:6;11883:16;:25;11858:8;:51::i;:::-;11614:329;11490:453;;;:::o;7698:840::-;-1:-1:-1;;;;;7829:18:19;;7821:68;;;;-1:-1:-1;;;7821:68:19;;6324:2:39;7821:68:19;;;6306:21:39;6363:2;6343:18;;;6336:30;6402:34;6382:18;;;6375:62;-1:-1:-1;;;6453:18:39;;;6446:35;6498:19;;7821:68:19;6122:401:39;7821:68:19;-1:-1:-1;;;;;7908:16:19;;7900:64;;;;-1:-1:-1;;;7900:64:19;;6730:2:39;7900:64:19;;;6712:21:39;6769:2;6749:18;;;6742:30;6808:34;6788:18;;;6781:62;-1:-1:-1;;;6859:18:39;;;6852:33;6902:19;;7900:64:19;6528:399:39;7900:64:19;-1:-1:-1;;;;;8050:15:19;;8028:19;8050:15;;;;;;;;;;;8084:21;;;;8076:72;;;;-1:-1:-1;;;8076:72:19;;7134:2:39;8076:72:19;;;7116:21:39;7173:2;7153:18;;;7146:30;7212:34;7192:18;;;7185:62;-1:-1:-1;;;7263:18:39;;;7256:36;7309:19;;8076:72:19;6932:402:39;8076:72:19;-1:-1:-1;;;;;8184:15:19;;;:9;:15;;;;;;;;;;;8202:20;;;8184:38;;8402:13;;;;;;;;;;:23;;;;;;8454:26;;1601:25:39;;;8402:13:19;;8454:26;;1574:18:39;8454:26:19;;;;;;;8493:37;12543:125;1408:132:18;1316:6;;-1:-1:-1;;;;;1316:6:18;736:10:27;1472:23:18;1464:68;;;;-1:-1:-1;;;1464:68:18;;7541:2:39;1464:68:18;;;7523:21:39;;;7560:18;;;7553:30;7619:34;7599:18;;;7592:62;7671:18;;1464:68:18;7339:356:39;2510:191:18;2603:6;;;-1:-1:-1;;;;;2620:17:18;;;-1:-1:-1;;;;;;2620:17:18;;;;;;;2653:40;;2603:6;;;2620:17;2603:6;;2653:40;;2584:16;;2653:40;2573:128;2510:191;:::o;14:548:39:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:39;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:39:o;1196:::-;1264:6;1272;1325:2;1313:9;1304:7;1300:23;1296:32;1293:52;;;1341:1;1338;1331:12;1293:52;1377:9;1364:23;1354:33;;1406:38;1440:2;1429:9;1425:18;1406:38;:::i;:::-;1396:48;;1196:254;;;;;:::o;1637:328::-;1714:6;1722;1730;1783:2;1771:9;1762:7;1758:23;1754:32;1751:52;;;1799:1;1796;1789:12;1751:52;1822:29;1841:9;1822:29;:::i;:::-;1812:39;;1870:38;1904:2;1893:9;1889:18;1870:38;:::i;:::-;1860:48;;1955:2;1944:9;1940:18;1927:32;1917:42;;1637:328;;;;;:::o;2159:186::-;2218:6;2271:2;2259:9;2250:7;2246:23;2242:32;2239:52;;;2287:1;2284;2277:12;2239:52;2310:29;2329:9;2310:29;:::i;:::-;2300:39;2159:186;-1:-1:-1;;;2159:186:39:o;2558:260::-;2626:6;2634;2687:2;2675:9;2666:7;2662:23;2658:32;2655:52;;;2703:1;2700;2693:12;2655:52;2726:29;2745:9;2726:29;:::i;:::-;2716:39;;2774:38;2808:2;2797:9;2793:18;2774:38;:::i;2823:380::-;2902:1;2898:12;;;;2945;;;2966:61;;3020:4;3012:6;3008:17;2998:27;;2966:61;3073:2;3065:6;3062:14;3042:18;3039:38;3036:161;;3119:10;3114:3;3110:20;3107:1;3100:31;3154:4;3151:1;3144:15;3182:4;3179:1;3172:15;3036:161;;2823:380;;;:::o;3556:222::-;3621:9;;;3642:10;;;3639:133;;;3694:10;3689:3;3685:20;3682:1;3675:31;3729:4;3726:1;3719:15;3757:4;3754:1;3747:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DECIMALS()": "2e0f2625",
    "allowToMint(address)": "b691f8de",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "mintReward(uint256,address)": "109d74e2",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "preventFromMinting(address)": "b018416f",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"allowToMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToMint\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exMinter\",\"type\":\"address\"}],\"name\":\"preventFromMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/StakeRewardToken.sol\":\"StakeRewardToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xee2b6bc803215b66037612da0fe9f23ec3c99ff89db4ff05449a8df17c9befc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://127be279bb6b2f6106127ea6b431cfc879f9018dd76b7575841821be9eef3488\",\"dweb:/ipfs/QmfXqvL6sKx256hrVuQcSnNtirZrpm4JUbDFXwGHKgrrXU\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x7138baa2520f7c1d6943ce6e53192d8eae5b50bf4b27dd602f8b27144987f70c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c616140f2b008385f0bffd7915ce7ce45c1e2bba201318b89d44073e36514597\",\"dweb:/ipfs/QmdsoxHZ326dnUKNYKahgNAj8wsJH111JrQsKHz6CkVBy7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973\",\"dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"src/StakeRewardToken.sol\":{\"keccak256\":\"0xed07a95c5a18161d9265a18fc2926550705df18c21db61a12b230854f8ef314f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1ca0d62c339313ddc3e4247a20285245409357d19bc666bf7a32573fba6a3e28\",\"dweb:/ipfs/QmahJzWYx7xawS8n1PekKncCXmmsurJHHpdZJHjnKkkTAd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DECIMALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newMinter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allowToMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountToMint",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintReward"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "exMinter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "preventFromMinting"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/StakeRewardToken.sol": "StakeRewardToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xee2b6bc803215b66037612da0fe9f23ec3c99ff89db4ff05449a8df17c9befc5",
        "urls": [
          "bzz-raw://127be279bb6b2f6106127ea6b431cfc879f9018dd76b7575841821be9eef3488",
          "dweb:/ipfs/QmfXqvL6sKx256hrVuQcSnNtirZrpm4JUbDFXwGHKgrrXU"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x7138baa2520f7c1d6943ce6e53192d8eae5b50bf4b27dd602f8b27144987f70c",
        "urls": [
          "bzz-raw://c616140f2b008385f0bffd7915ce7ce45c1e2bba201318b89d44073e36514597",
          "dweb:/ipfs/QmdsoxHZ326dnUKNYKahgNAj8wsJH111JrQsKHz6CkVBy7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130",
        "urls": [
          "bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa",
          "dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89",
        "urls": [
          "bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973",
          "dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "src/StakeRewardToken.sol": {
        "keccak256": "0xed07a95c5a18161d9265a18fc2926550705df18c21db61a12b230854f8ef314f",
        "urls": [
          "bzz-raw://1ca0d62c339313ddc3e4247a20285245409357d19bc666bf7a32573fba6a3e28",
          "dweb:/ipfs/QmahJzWYx7xawS8n1PekKncCXmmsurJHHpdZJHjnKkkTAd"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/StakeRewardToken.sol",
    "id": 32184,
    "exportedSymbols": {
      "Context": [
        30668
      ],
      "ERC20": [
        29125
      ],
      "IERC20": [
        29203
      ],
      "IERC20Metadata": [
        29228
      ],
      "Ownable": [
        28538
      ],
      "StakeRewardToken": [
        32183
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:754:34",
    "nodes": [
      {
        "id": 32112,
        "nodeType": "PragmaDirective",
        "src": "39:23:34",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 32113,
        "nodeType": "ImportDirective",
        "src": "64:64:34",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32184,
        "sourceUnit": 29126,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32114,
        "nodeType": "ImportDirective",
        "src": "129:61:34",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32184,
        "sourceUnit": 28539,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32183,
        "nodeType": "ContractDefinition",
        "src": "192:600:34",
        "nodes": [
          {
            "id": 32122,
            "nodeType": "VariableDeclaration",
            "src": "242:46:34",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "allowedToMint",
            "nameLocation": "275:13:34",
            "scope": 32183,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 32121,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 32119,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "250:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "242:24:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32120,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "261:4:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 32125,
            "nodeType": "VariableDeclaration",
            "src": "294:37:34",
            "nodes": [],
            "constant": true,
            "functionSelector": "2e0f2625",
            "mutability": "constant",
            "name": "DECIMALS",
            "nameLocation": "318:8:34",
            "scope": 32183,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32123,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "294:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 32124,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "329:2:34",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "id": 32133,
            "nodeType": "FunctionDefinition",
            "src": "338:50:34",
            "nodes": [],
            "body": {
              "id": 32132,
              "nodeType": "Block",
              "src": "386:2:34",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5374616b65526577617264546f6b656e",
                    "id": 32128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "358:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c6ab7147a0f9dc6fa7f27cd7619530784ac151d7bd55a5facc3e0ab342d32fe4",
                      "typeString": "literal_string \"StakeRewardToken\""
                    },
                    "value": "StakeRewardToken"
                  },
                  {
                    "hexValue": "52575244",
                    "id": 32129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "378:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_feba0d948e88f214b564008103f86957e1c2904cc53b2e78e0ff888010957b21",
                      "typeString": "literal_string \"RWRD\""
                    },
                    "value": "RWRD"
                  }
                ],
                "id": 32130,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32127,
                  "name": "ERC20",
                  "nameLocations": [
                    "352:5:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29125,
                  "src": "352:5:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "352:33:34"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "349:2:34"
            },
            "returnParameters": {
              "id": 32131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "386:0:34"
            },
            "scope": 32183,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32147,
            "nodeType": "FunctionDefinition",
            "src": "394:105:34",
            "nodes": [],
            "body": {
              "id": 32146,
              "nodeType": "Block",
              "src": "451:48:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 32140,
                        "name": "allowedToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32122,
                        "src": "461:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 32142,
                      "indexExpression": {
                        "id": 32141,
                        "name": "newMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32135,
                        "src": "475:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "461:24:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 32143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "488:4:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "461:31:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32145,
                  "nodeType": "ExpressionStatement",
                  "src": "461:31:34"
                }
              ]
            },
            "functionSelector": "b691f8de",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32138,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32137,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "441:9:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28457,
                  "src": "441:9:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "441:9:34"
              }
            ],
            "name": "allowToMint",
            "nameLocation": "403:11:34",
            "parameters": {
              "id": 32136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32135,
                  "mutability": "mutable",
                  "name": "newMinter",
                  "nameLocation": "423:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 32147,
                  "src": "415:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "414:19:34"
            },
            "returnParameters": {
              "id": 32139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "451:0:34"
            },
            "scope": 32183,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32161,
            "nodeType": "FunctionDefinition",
            "src": "505:111:34",
            "nodes": [],
            "body": {
              "id": 32160,
              "nodeType": "Block",
              "src": "568:48:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 32154,
                        "name": "allowedToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32122,
                        "src": "578:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 32156,
                      "indexExpression": {
                        "id": 32155,
                        "name": "exMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32149,
                        "src": "592:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "578:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 32157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "604:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "578:31:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32159,
                  "nodeType": "ExpressionStatement",
                  "src": "578:31:34"
                }
              ]
            },
            "functionSelector": "b018416f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32152,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32151,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "558:9:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28457,
                  "src": "558:9:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "558:9:34"
              }
            ],
            "name": "preventFromMinting",
            "nameLocation": "514:18:34",
            "parameters": {
              "id": 32150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32149,
                  "mutability": "mutable",
                  "name": "exMinter",
                  "nameLocation": "541:8:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 32161,
                  "src": "533:16:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "532:18:34"
            },
            "returnParameters": {
              "id": 32153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:0:34"
            },
            "scope": 32183,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32182,
            "nodeType": "FunctionDefinition",
            "src": "622:168:34",
            "nodes": [],
            "body": {
              "id": 32181,
              "nodeType": "Block",
              "src": "683:107:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 32169,
                          "name": "allowedToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32122,
                          "src": "701:13:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 32172,
                        "indexExpression": {
                          "expression": {
                            "id": 32170,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "715:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "719:6:34",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "715:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "701:25:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420616c6c6f77656420746f206d696e74",
                        "id": 32173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "728:21:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df2cdab5d271add0582f8e00d5d20fbc7502175a5bfaf15a57bd101eb5863fd9",
                          "typeString": "literal_string \"not allowed to mint\""
                        },
                        "value": "not allowed to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df2cdab5d271add0582f8e00d5d20fbc7502175a5bfaf15a57bd101eb5863fd9",
                          "typeString": "literal_string \"not allowed to mint\""
                        }
                      ],
                      "id": 32168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "693:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "693:57:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32175,
                  "nodeType": "ExpressionStatement",
                  "src": "693:57:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32177,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32165,
                        "src": "766:2:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32178,
                        "name": "amountToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32163,
                        "src": "770:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32176,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28942,
                      "src": "760:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 32179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "760:23:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32180,
                  "nodeType": "ExpressionStatement",
                  "src": "760:23:34"
                }
              ]
            },
            "functionSelector": "109d74e2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintReward",
            "nameLocation": "631:10:34",
            "parameters": {
              "id": 32166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32163,
                  "mutability": "mutable",
                  "name": "amountToMint",
                  "nameLocation": "650:12:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 32182,
                  "src": "642:20:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32165,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "672:2:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 32182,
                  "src": "664:10:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "641:34:34"
            },
            "returnParameters": {
              "id": 32167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:0:34"
            },
            "scope": 32183,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32115,
              "name": "ERC20",
              "nameLocations": [
                "221:5:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29125,
              "src": "221:5:34"
            },
            "id": 32116,
            "nodeType": "InheritanceSpecifier",
            "src": "221:5:34"
          },
          {
            "baseName": {
              "id": 32117,
              "name": "Ownable",
              "nameLocations": [
                "228:7:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28538,
              "src": "228:7:34"
            },
            "id": 32118,
            "nodeType": "InheritanceSpecifier",
            "src": "228:7:34"
          }
        ],
        "canonicalName": "StakeRewardToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32183,
          28538,
          29125,
          29228,
          29203,
          30668
        ],
        "name": "StakeRewardToken",
        "nameLocation": "201:16:34",
        "scope": 32184,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 34
}